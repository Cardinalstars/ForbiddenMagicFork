buildscript {
    repositories {
        maven {//added, fixes some of the 501 issues
            name = "mavenCentral"
            url = "https://repo1.maven.org/maven2/"
        }
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
 	    maven {
             name = "jitpack.io"
             url = "https://jitpack.io"
         }
    }
    dependencies {
        classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.minecraft_version + "-" + config.mod_version
group= "com.github.spitefulfox.forbiddenmagic" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Forbidden Magic"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

dependencies {
    compile files('libs/Thaumcraft-deobf-1.7.10-4.2.3.5.jar')
    //compile fileTree(dir: 'lib', include: '*.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

deobfJar.dependsOn classes
assemble.dependsOn deobfJar